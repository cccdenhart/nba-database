seasDf <- appendTables(season)
toDrop <- c(1, 2, 4, 5, 6, 7, 8, 9, 13, 16, 19)
finalSeas <- seasDf[,-toDrop]
finalSeas$MP <- as.double(gsub(":", ".", finalSeas$MP))
write.csv(finalSeas, "/Users/cccdenhart/Documents/CS3200_Workspace/FinalProject/data/PlayerSeasons.csv")
View(finalSeas)
season <- "/Users/cccdenhart/Documents/CS3200_Workspace/FinalProject/data/PlayerSeasons"
seasDf <- appendTables(season)
toDrop <- c(1, 2, 4, 5, 6, 7, 8, 9, 13, 16, 19)
finalSeas <- seasDf[,-toDrop]
finalSeas$MP <- as.numeric(gsub(":", ".", finalSeas$MP))
write.csv(finalSeas, "/Users/cccdenhart/Documents/CS3200_Workspace/FinalProject/data/PlayerSeasons.csv")
View(finalSeas)
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15
p124 <- 190
g1 <- t1 + t2 + d1
g2 <- p21 + p22 + t103
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15
p124 <- 190
t103 <- 435
g1 <- t1 + t2 + d1
g2 <- p21 + p22 + t103
g3 <- p11 + p12
g4 <- p125 + p126 + t103
g5 <- p121
g6 <- p123 + t13 + t103
g7 <- p122a + p122b + p122c + t13 + t103
g8 <- p124 + p122c + t13 + t103
path1 <- g1 + g2
path2 <- g1 + g3 + g4
path3 <- g1 + g3 + g5 + g6
path4 <- g1 + g3 + g5 + g7
path5 <- g1 + g3 + g5 + g8
path1 <- g1 + g2 * s1
s1 <- .5
s2 <- .5
s3a <- .6
s3b <- .2
s3c <- 1 - s3a - s3b
path1 <- g1 + g2 * s1
path2 <- g1 + g3 * s1 + g4 * s2
path3 <- g1 + g3 * s1 + g5 * s2 + g6 * s3a
path4 <- g1 + g3 * s1 + g5 * s2 + g7 * s3b
path5 <- g1 + g3 * s1 + g5 * s2 + g8 * s3c
path1 <- g1 + g2 * s1
path2 <- g1 + g3 * s1 + g4 * s2
path3 <- g1 + g3 * s1 + g5 * s2 + g6 * s3a
path4 <- g1 + g3 * s1 + g5 * s2 + g7 * s3b
path5 <- g1 + g3 * s1 + g5 * s2 + g8 * s3c
allPaths <- c(path1, path2, path3, path4, path5)
maxTime <- max(allPaths)
maxPath <- which(allPaths==maxTime)
maxTime <- max(allPaths)
maxPath <- which(allPaths==maxTime)
maxTime
maxPath
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- allInputs * maxTime
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
initEvents <- function() {
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15
p124 <- 190
t103 <- 435
allEvents <- c(t1, t2, d1, p22, p21, p11, p12, p125, p126, p121, p123, t13, p122a, p122b, p122c, p124, t103)
return(allEvents)
}
initEvents
initEvents()
t1
initEvents <- function(num_inputs) {
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50 * num_inputs
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35 * num_inputs
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15 * num_inputs
p124 <- 190 * num_inputs
t103 <- 435
}
initGroups <- function() {
g1 <- t1 + t2 + d1
g2 <- p21 + p22 + t103
g3 <- p11 + p12
g4 <- p125 + p126 + t103
g5 <- p121
g6 <- p123 + t13 + t103
g7 <- p122a + p122b + p122c + t13 + t103
g8 <- p124 + p122c + t13 + t103
}
s1 <- .5
s2 <- .5
s3a <- .6
s3b <- .2
s3c <- 1 - s3a - s3b
findPaths <- function() {
path1 <- g1 + g2 * s1
path2 <- g1 + g3 * s1 + g4 * s2
path3 <- g1 + g3 * s1 + g5 * s2 + g6 * s3a
path4 <- g1 + g3 * s1 + g5 * s2 + g7 * s3b
path5 <- g1 + g3 * s1 + g5 * s2 + g8 * s3c
allPaths <- c(path1, path2, path3, path4, path5)
return(allPaths)
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
initEvents(num_inputs)
initGroups()
paths <- initPaths()
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
initEvents(num_inputs)
initGroups()
paths <- findPaths()
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
initEvents(input)
initGroups()
paths <- findPaths()
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print("HELLO WORLD")
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
print(paths)
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
initEvents <- function(num_inputs) {
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50 * num_inputs
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35 * num_inputs
print("126:")
print(126)
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15 * num_inputs
p124 <- 190 * num_inputs
t103 <- 435
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
print(paths)
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
initEvents <- function(num_inputs) {
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50 * num_inputs
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35 * num_inputs
print("p126:")
print(p126)
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15 * num_inputs
p124 <- 190 * num_inputs
t103 <- 435
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
print(paths)
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
initGroups <- function() {
g1 <- t1 + t2 + d1
g2 <- p21 + p22 + t103
g3 <- p11 + p12
g4 <- p125 + p126 + t103
g5 <- p121
g6 <- p123 + t13 + t103
print("g6:")
print(g6)
g7 <- p122a + p122b + p122c + t13 + t103
g8 <- p124 + p122c + t13 + t103
}
findPaths <- function() {
path1 <- g1 + g2 * s1
path2 <- g1 + g3 * s1 + g4 * s2
path3 <- g1 + g3 * s1 + g5 * s2 + g6 * s3a
path4 <- g1 + g3 * s1 + g5 * s2 + g7 * s3b
path5 <- g1 + g3 * s1 + g5 * s2 + g8 * s3c
allPaths <- c(path1, path2, path3, path4, path5)
return(allPaths)
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
print(paths)
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
initEvents <- function(num_inputs) {
t1 <- 20
t2 <- 40
d1 <- 120
p22 <- 50 * num_inputs
p21 <- 30
p11 <- 70
p12 <- 10
p125 <- 130
p126 <- 35 * num_inputs
print("p126:")
print(p126)
p121 <- 110
p123 <- 80
t13 <- 115
p122a <- 40
p122b <- 10
p122c <- 15 * num_inputs
p124 <- 190 * num_inputs
t103 <- 435
}
initGroups <- function() {
g1 <- t1 + t2 + d1
g2 <- p21 + p22 + t103
g3 <- p11 + p12
g4 <- p125 + p126 + t103
g5 <- p121
g6 <- p123 + t13 + t103
print("g6:")
print(g6)
g7 <- p122a + p122b + p122c + t13 + t103
g8 <- p124 + p122c + t13 + t103
}
s1 <- .5
s2 <- .5
s3a <- .6
s3b <- .2
s3c <- 1 - s3a - s3b
findPaths <- function() {
path1 <- g1 + g2 * s1
path2 <- g1 + g3 * s1 + g4 * s2
path3 <- g1 + g3 * s1 + g5 * s2 + g6 * s3a
path4 <- g1 + g3 * s1 + g5 * s2 + g7 * s3b
path5 <- g1 + g3 * s1 + g5 * s2 + g8 * s3c
allPaths <- c(path1, path2, path3, path4, path5)
return(allPaths)
}
maxTimes <- function(num_inputs) {
times <- c()
for(input in num_inputs) {
print(input)
initEvents(input)
initGroups()
paths <- findPaths()
print(paths)
maxTime <- max(paths)
times <- c(times, maxTime)
}
return(times)
}
allInputs <- c(10, 20, 30, 40, 50)
allMaxTimes <- maxTimes(allInputs)
inputDf <- data.frame(allInputs, allMaxTimes)
names(inputDf) <- c("Inputs", "Times")
inputDf
View(cars)
View(cars)
min(cars$dist)
max(cars$dist)
79-2
/118
77/118
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?lm
View(hd)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
model
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
?sma
install.packages("smooth")
library(smooth)
?sma
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
View(hd)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
View(hd)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
View(b)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
View(b)
sma(b$Subscribers)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool.R', echo=TRUE)
data
sma(data, order=c(1, 1, 3))
install.packages("racma")
install.packages("pracma")
library(pracma)
movavg
?movavg
source('~/.active-rstudio-document', echo=TRUE)
View(ib)
ib <- read.csv("/Users/cccdenhart/Documents/DS4100Exam/ib.csv")
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
library(class)
?knn
?sqrt
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
nrow(test)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
knn
summary(knn)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
m
library(caret)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
?confusionMatrix
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
View(ib)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
summary(m)
length(which(classes==0))
length(which(classes==1))
m
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
View(finalDf)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
all0
wrong0
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
wrong0
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
pwrong
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
p0
source('~/Documents/DS4100Exam/tool2.R', echo=TRUE)
p1g0
p0
p1n0
